import streamlit as st
import json
from author import hash_password,autor
import random

def register_user(username, password):
    if 'users' not in st.session_state:
        st.session_state.users = {}
    st.session_state.users[username] = password
if 'logged_in' not in st.session_state:
    st.session_state.logged_in = False
if 'show_register' not in st.session_state:
    st.session_state.show_register = False 
    
    
    
if not st.session_state.logged_in:
    # –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –º–µ–∂–¥—É —Ñ–æ—Ä–º–∞–º–∏ –≤—Ö–æ–¥–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏    
        
    if st.session_state.show_register:
        st.title("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        new_username = st.text_input("–ù–æ–≤—ã–π –ª–æ–≥–∏–Ω", key="reg_user")
        new_password = st.text_input("–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å", type="password", key="reg_pass1")
        confirm_password = st.text_input("–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å", type="password", key="reg_pass2")
        
        if st.button("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"):
            with open('user2.json','r') as file:
                print('Test base working')
                d = json.load(file)
                
            # –ø—Ä–æ–≤–µ—Ä—è—é –µ—Å–ª—Ç—å –ª–∏ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–± –∏–ª–∏ –Ω–µ—Ç    
            if new_username in d:
                st.error('This username is already taken')
            else:   
                if not new_username or not new_password:
                    st.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")
                elif new_password != confirm_password:
                    st.error("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!")
                else:
                    register_user(new_username, new_password)
                    st.success("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –ú–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏")
                    st.session_state.show_register = False
                    with open('user2.json','r', encoding="utf-8") as file:
                        data = json.load(file)
                        
                    data[new_username] = hash_password(new_password) # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
                   
                    
                    # –ó–∞–ø–∏—Å—å –≤ –±–∞–∑—É –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É)
                    with open('user2.json','w', encoding="utf-8") as file:
                        json.dump(data,file,indent=4, ensure_ascii=False)
                        
                        
                        
                    
        if st.button("‚Üê –ù–∞–∑–∞–¥ –∫ –≤—Ö–æ–¥—É"):
            st.session_state.show_register = False
            st.rerun()
    
    else:
        # –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞
        st.title("üîí –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
        username = st.text_input("–õ–æ–≥–∏–Ω")
        password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")
        us2 = username
        if st.button("–í–æ–π—Ç–∏"):
            # –ü—Ä–æ–≤–µ—Ä—è—é –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É
            if autor(username, password):
                st.session_state.logged_in = True
                st.session_state.username = username
                st.rerun()
            else:
                st.error("–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        if st.button("–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç"):
            st.session_state.show_register = True
            st.rerun()
    
    st.stop()
# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
st.success(f"‚úÖ Welcome to Alexandria, {st.session_state.username}!")        

main_search = st.text_input("Search anything")


def create_post(title, author, content, tags=None):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–π –ø–æ—Å—Ç –≤ Streamlit —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - title: –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Å—Ç–∞
    - author: –∞–≤—Ç–æ—Ä –ø–æ—Å—Ç–∞
    - content: —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø–æ—Å—Ç–∞
    - tags: —Å–ø–∏—Å–æ–∫ —Ç–µ–≥–æ–≤ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π)
    """
    if tags is None:
        tags = []
    
    st.markdown(f"""
    <div style="
        padding: 20px;
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        margin-bottom: 25px;
    ">
        <h2 style="margin-top: 0; color: #2c3e50;">{title}</h2>
        <div style="
            color: #7f8c8d;
            font-size: 0.85em;
            margin-bottom: 15px;
        ">
            –ê–≤—Ç–æ—Ä: {author}
        </div>
        <p style="color: #34495e; line-height: 1.6;">{content}</p>
        {f'<div style="margin-top: 15px;">' + 
         ''.join([f'<span style="background: #e0f2fe; color: #0369a1; padding: 3px 8px; border-radius: 12px; margin-right: 5px; font-size: 0.8em;">{tag}</span>' 
                 for tag in tags]) + '</div>' if tags else ''}
    </div>
    """, unsafe_allow_html=True)
    
    
    
    
    
with open("pages/posts.json",'r') as file:
        ps = json.load(file)
user_ex = False        
for user in ps:
    if user["username"] == st.session_state.username:
        user_ex = True
if not user_ex:                
    ps.append({
        "username":st.session_state.username,
        "posts":[],
        "time":[],
        "titles":[]
    })  
    with open("pages/posts.json","w") as file:
        json.dump(ps,file,indent=2,ensure_ascii=False)      

with open('pages/posts.json',"r") as file:
    lenta = json.load(file)

us = []
us_post = []

for user in lenta:
    if user["username"] != "":
        us.append(user["username"])
        us_post.append(user["posts"])
print(us)
print(us_post)        
for i in  range(len(list(set(us)))):
    #st.badge(f"{us[i]} Posted")
    #poststs = st.text_area(" ",random.choice(us_post[i]))
    create_post("Test",us[i],random.choice(us_post[i]),tags=None)
                           
     
