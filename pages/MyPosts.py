import streamlit as st
import json
from author import hash_password,autor
from datetime import datetime

def register_user(username, password):
    if 'users' not in st.session_state:
        st.session_state.users = {}
    st.session_state.users[username] = password
if 'logged_in' not in st.session_state:
    st.session_state.logged_in = False
if 'show_register' not in st.session_state:
    st.session_state.show_register = False 
    
    
    
if not st.session_state.logged_in:
    # –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –º–µ–∂–¥—É —Ñ–æ—Ä–º–∞–º–∏ –≤—Ö–æ–¥–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏    
        
    if st.session_state.show_register:
        st.title("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        new_username = st.text_input("–ù–æ–≤—ã–π –ª–æ–≥–∏–Ω", key="reg_user")
        new_password = st.text_input("–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å", type="password", key="reg_pass1")
        confirm_password = st.text_input("–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å", type="password", key="reg_pass2")
        
        if st.button("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"):
            with open('user2.json','r') as file:
                print('Test base working')
                d = json.load(file)
                
            # –ø—Ä–æ–≤–µ—Ä—è—é –µ—Å–ª—Ç—å –ª–∏ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–± –∏–ª–∏ –Ω–µ—Ç    
            if new_username in d:
                st.error('This username is already taken')
            else:   
                if not new_username or not new_password:
                    st.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")
                elif new_password != confirm_password:
                    st.error("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!")
                else:
                    register_user(new_username, new_password)
                    st.success("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –ú–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏")
                    st.session_state.show_register = False
                    with open('user2.json','r', encoding="utf-8") as file:
                        data = json.load(file)
                    data[new_username] = hash_password(new_password) # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
                    
                    
                    
                    # –ó–∞–ø–∏—Å—å –≤ –±–∞–∑—É –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É)
                    with open('user2.json','w', encoding="utf-8") as file:
                        json.dump(data,file,indent=4, ensure_ascii=False)
                        
                        
                        
                    
        if st.button("‚Üê –ù–∞–∑–∞–¥ –∫ –≤—Ö–æ–¥—É"):
            st.session_state.show_register = False
            st.rerun()
    
    else:
        # –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞
        st.title("üîí –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
        username = st.text_input("–õ–æ–≥–∏–Ω")
        password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")
        us2 = username
        if st.button("–í–æ–π—Ç–∏"):
            # –ü—Ä–æ–≤–µ—Ä—è—é –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É
            if autor(username, password):
                st.session_state.logged_in = True
                st.session_state.username = username
                st.rerun()
            else:
                st.error("–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        if st.button("–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç"):
            st.session_state.show_register = True
            st.rerun()
    
    st.stop()
# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
st.success(f"‚úÖ Welcome to Alexandria, {st.session_state.username}!")        
st.title(st.session_state.username)
title = st.text_input("Title for the post",placeholder="Create a title")
post = st.text_input("Make a post",placeholder="Today i...")
st.badge("Your posts")
with open("pages/posts.json",'r') as file:
    ps = json.load(file)
seen = []    
titles = []     
for user in ps:
    if st.session_state.username == user["username"]:
        for i in user["posts"]:
            if i not  in seen:
                seen.append(i)
        for j in user["titles"]:
            titles.append(j)                
d = datetime.now()
f = str(d).split()[0]           
if post != "":
    for i in ps:
        if st.session_state.username == user["username"]:
            user["posts"].append(post)
            user["time"].append(f)
            user["titles"].append(title)
            
    with open("pages/posts.json",'w') as file:
        json.dump(ps,file,indent=2)        
    seen.append(post)            
with open('pages/posts.json','r') as file:
    times = json.load(file)    
times2 = []        
for user in times:
    if st.session_state.username == user["username"]:
        for j in user["time"]:
            times2.append(j)   
print(f"Len of posts {list(set(seen))}")
print(f"Len of titles {list(set(titles))}")   
print(f"Len of times {list(set(times2))}")                    
for post in range(len(list(set(seen)))):   
    tit = st.text(list(set(titles))[post])        
    pss = st.text_area(f"Post{post},Time: {times2[post]}",seen[post])                

    
    